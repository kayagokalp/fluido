// The entry point of the grammar, which tries to parse an expression
expression = { mix | fluid }

// A rule to parse the mix operation, which contains two expressions
mix = { "(" ~ "mix" ~ WS* ~ expression ~ WS+ ~ expression ~ WS* ~ ")" }

// A rule to parse the fluid operation, which takes two parameters
fluid = { "(" ~ "fluid" ~ WS+ ~ float ~ WS+ ~ float ~ WS* ~ ")" }

// A rule to parse floating point numbers and fractions
float = _{ fraction | number }

// A rule to parse fractions in the form of "1/10"
fraction = { ASCII_DIGIT+ ~ "/" ~ ASCII_DIGIT+ }

// A rule to parse floating point numbers in the form of "0.1"
number = { "-"? ~ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)? }

// Whitespace handling
WS = _{ " " | "\t" | "\n" | "\r" }
